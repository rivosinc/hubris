# What is this task?

Hubris can run on ARMv8m targets, some of which may support
[TrustZone](https://developer.arm.com/documentation/100688/0200/Secure-and-Normal-Worlds?lang=en).
ARM nominially expects the secure world to be compiled as a
[static library](https://developer.arm.com/documentation/ecm0359818/latest/)
but making that work with Hubris has turned out to be troublesome (static
libraries are big, too many build extensions required among other reasons).
Instead of building a static library, Hubris designates a single "task" as
the secure task where all memory will be marked as secure (or NSC as
appropriate). "Task" is being used very generously as this is not designed to
be scheduled and run like other Hubris tasks. The use of "task" here is mostly
designed to take adavantage of as much of the existing build infrastructure
as possible.

Other tasks that want to use TrustZone can designate it in the build
configuration file. At build time, the table of appropriate entry points
will get inserted into tasks that want to use TrustZone. This ends up looking
very close to ARM's strategy of linking in a static library given how Hubris
tasks are built!

There is certainly room for improvement in the future.
